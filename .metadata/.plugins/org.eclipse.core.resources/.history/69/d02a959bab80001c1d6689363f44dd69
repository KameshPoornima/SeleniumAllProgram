package sample.org;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;

public  class Baseclass {
    		public static WebDriver driver;
    		public static void BroswerLanch(String broswername) {
    			try {
					if (broswername.equalsIgnoreCase("chrome")) {
						System.getProperty("webdriver.chrome.driver", "D:\\Selenium\\Prog\\Sample1\\Driver\\chromedriver.exe");
					 driver = new ChromeDriver();
						
					}else if (broswername.equalsIgnoreCase("Firefox")) {
						System.getProperty("webdriver.geckod.driver", "D:\\Selenium\\Prog\\Sample1\\Driver\\geckodriver.exe");
						 driver = new FirefoxDriver();
						
					}
					else {
						System.out.println("Invalid Broswer");

					}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
    			
    			
					

			}
    		
    	public static void Navigate_To(String url) {
    		try {
				driver.navigate().to("url");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
      public static void Navigate_Forward() {
         try {
			driver.navigate().forward();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
    public static void Navigate_Back() {
try {
	driver.navigate().back();
} catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
	}  
    public static void Quit() {
   try {
	driver.quit();
} catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
	}
    public static void Close() {
 try {
	driver.close();
} catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
	}
    public static void ScreenShot() throws IOException {
    	try {
			TakesScreenshot scr = (TakesScreenshot) driver;
			File sc = scr.getScreenshotAs(OutputType.FILE);
			File des = new File("D:\\Selenium\\Prog\\Sample1\\ScreenShort/png");
			FileUtils.copyToDirectory(sc, des);
		} catch (WebDriverException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

    	public static void Loc_ID(String id) {
try {
	driver.findElement(By.id(id)).click();
} catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
		}
    	public static void Loc_Name(String name) {
    		try {
				driver.findElement(By.name(name)).click();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void Loc_LinkText(String text) {
    		try {
				driver.findElement(By.linkText(text)).click();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void Loc_Xpath(String xpath) {
    		try {
				driver.findElement(By.xpath(xpath)).click();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void Accept() {
    		try {
				driver.switchTo().alert().accept();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void Dismiss() {
try {
	driver.switchTo().alert().dismiss();
} catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
		}
    	public static void Prompt_Alert(String value) {
    		try {
				Alert prompt = driver.switchTo().alert();
				prompt.sendKeys(value);
				prompt.accept();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
    	public static void Robot() {
    		try {
				Robot ro = new Robot();    // keyboard actions
				
				ro.keyPress(KeyEvent.VK_ENTER);
				ro.keyRelease(KeyEvent.VK_ENTER);
			} catch (AWTException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void Maxmize() {
    		try {
				driver.manage().window().maximize();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void ContextClick(String xpath) {
    		try {
				Actions ac = new Actions(driver);    // mouse actions
				
				WebElement f1 = driver.findElement(By.xpath(xpath));
				ac.contextClick(f1).perform();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
    	public static void get(String url) {
    		try {
				driver.get(url);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
}
